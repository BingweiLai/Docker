version: "3.8"
services:

  haproxy:
   image: haproxy:test
   container_name: haproxy
   volumes:
    - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
   ports:
    - 80:80
   depends_on:
    - web1
    - web2
    - redis-slave2
   links:
     - web1
     - web2
   networks:
      My_networkforall:
    
  web1:
    image: nginx:test
    container_name: web1
    volumes:
      - ./nginx/nginx1/default.conf:/etc/nginx/conf.d/default.conf
      - ./www/web1:/usr/share/nginx/html
    expose:
      - "80"
    links:
      - php1
    networks:
      My_networkforall:


  web2:
    image: nginx:test
    container_name: web2
    volumes:
      - ./nginx/nginx2/default.conf:/etc/nginx/conf.d/default.conf
      - ./www/web2:/usr/share/nginx/html
    expose:
      - "80"
    links:
      - php2
    networks:
      My_networkforall:


  php1:
    image: php:test
    container_name: php1
    restart: always
    expose:
      - "9000"
    volumes:
      - ./www/web1:/usr/share/nginx/html
    links:
      - redis
    networks:
      My_networkforall:

  php2:
    image: php:test
    container_name: php2
    restart: always
    expose:
      - "9000"
    volumes:
      - ./www/web2:/usr/share/nginx/html
    links:
      - redis
    networks:
      My_networkforall:

  redis-master:
    image: redis:test
    container_name: redis-master
    ports:
      - 6379:6379
    volumes:
      - ./data/redis/redis-master/redis.conf:/etc/redis/redis.conf
    networks:
      My_networkforall:
        ipv4_address: 192.16.0.6

  redis-slave1:
    image: redis:test
    container_name: redis-slave1
    ports:
      - 6380:6380
    volumes:
      - ./data/redis/redis-slave1/redis.conf:/etc/redis/redis.conf
    command: redis-server --slaveof redis-master 6379
    depends_on:
      - redis-master
    networks:
      My_networkforall:
        ipv4_address: 192.16.0.7

  redis-slave2:
    image: redis:test
    container_name: redis-slave2
    ports:
      - 6381:6381
    volumes:
      - ./data/redis/redis-slave2/redis.conf:/etc/redis/redis.conf
    command: redis-server --slaveof redis-master 6379
    depends_on:
      - redis-master
      - redis-slave1
    networks:
      My_networkforall:
        ipv4_address: 192.16.0.8

networks: 
#建立一個給所有container使用的網路 
  My_networkforall:
    driver: bridge
    name: My_network
    ipam:
      config:
       - subnet: 192.16.0.0/16
         gateway: 192.16.0.1